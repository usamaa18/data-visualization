const url = "https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json";
const xhr = new XMLHttpRequest();

const scale = 0.6;
const w = 1920 * scale;
const h = 1080 * scale;
const paddingTop = 20;
const paddingBottom = 30;
const paddingLeft = 50;
const paddingRight = 20;

const svg = d3.select("#root")
    .append("svg")
    .attr("width", w)
    .attr("height", h);

const arrayColumn = (arr, n) => arr.map(x => x[n]);


xhr.open("GET", url, true);
xhr.onload = function() {
    let json = JSON.parse(this.responseText);
    console.log(json);

    const dates = arrayColumn(json.data, 0);
    const gdp = arrayColumn(json.data, 1);
    const xScale = d3.scaleTime()
        .domain([new Date(dates[0]), new Date(dates[dates.length - 1])])
        .range([paddingLeft, w - paddingRight]);

    const yScale = d3.scaleLinear()
        .domain([d3.min(gdp), d3.max(gdp)])
        .range([h - paddingBottom, paddingTop]);


    let tooltip = d3.select("#root")
        .append("div")
        .attr("class", "tooltip");
        
    svg.selectAll("rect")
        .data(json.data)
        .enter()
        .append("rect")
        .attr("x", d => xScale(new Date(d[0])))
        .attr("y", d => yScale(d[1]))
        .attr("width", (w/json.data.length) - 0.3)
        .attr("height", d => h - yScale(d[1]) - paddingBottom)
        .attr("class", "bar")
        .on("mouseover", (e,d) => {
            tooltip.text(d[1])
                .style("visibility", "visible");
        })
        .on("mousemove", (e) => tooltip.style("left", (e.pageX + 30) + "px")
            .style("top", (e.pageY - 30) + "px"))
        .on("mouseout", () => tooltip.style("visibility", "hidden"));

    const xAxis = d3.axisBottom(xScale);
    svg.append("g")
        .attr("transform", "translate(0, " + (h - paddingBottom) + ")")
        .call(xAxis);

    const yAxis = d3.axisLeft(yScale);
    svg.append("g")
        .attr("transform", "translate(" + (paddingLeft) + ", 0)")
        .call(yAxis);   


};
xhr.send();